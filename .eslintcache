[{"C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\index.js":"1","C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\App.js":"2","C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\Post.js":"3","C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\firebase.js":"4","C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\ImageUpload.js":"5"},{"size":157,"mtime":1610085659143,"results":"6","hashOfConfig":"7"},{"size":7243,"mtime":1610778820893,"results":"8","hashOfConfig":"7"},{"size":2871,"mtime":1610698604199,"results":"9","hashOfConfig":"7"},{"size":721,"mtime":1610690167655,"results":"10","hashOfConfig":"7"},{"size":2293,"mtime":1610692385378,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"e6gs8m",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\index.js",[],["25","26"],"C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\App.js",[],"C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\Post.js",["27"],"import React,{useState, useEffect} from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport './Post.css'\r\nimport firebase,{ db } from './firebase'\r\n\r\nconst Post = ({postId,user,username,avatar,imageUrl,caption}) =>{\r\n\r\n    const [comment, setComment] = useState('')\r\n    const [comments, setComments] = useState([])\r\n\r\n    const postComment = (e) =>{\r\n        e.preventDefault()\r\n        db.collection('posts')\r\n            .doc(postId)\r\n            .collection('comments')\r\n            .add({\r\n                text:comment,\r\n                username:user.displayName,\r\n                timestamp:firebase.firestore.Timestamp.fromDate(new Date()),\r\n            })\r\n            setComment('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId){\r\n            unsubscribe = db.collection('posts')\r\n                            .doc(postId)\r\n                            .collection('comments')\r\n                            .orderBy('timestamp','desc')\r\n                            .onSnapshot((snapshot)=>{\r\n                                setComments(snapshot.docs.map(\r\n                                    (doc)=>doc.data()\r\n                                ))\r\n                            })\r\n        }\r\n        return () =>{\r\n            unsubscribe()\r\n        }\r\n    }, [postId])\r\n\r\n    return(\r\n        <div className='post'>\r\n            <div className='post__header'>\r\n                <Avatar \r\n                    className='post__avatar'\r\n                    alt='username'\r\n                    src={avatar}\r\n                />\r\n                <h3>{username}</h3>\r\n            </div>\r\n            <img\r\n                className='post__image'\r\n                src={imageUrl}\r\n                alt='Post Image'\r\n            />\r\n            <h4 className='post__text'><strong>{username} : </strong> {caption}</h4>\r\n\r\n            <div className='post__comments'>\r\n                {\r\n                    comments.map((cmnt)=>(\r\n                        <p>\r\n                            <b>{cmnt.username} - </b>  {cmnt.text}\r\n                        </p>\r\n                    ))\r\n                }\r\n            </div>\r\n            {\r\n                user ?\r\n                <form className='post__commentBox'>\r\n                <input\r\n                    className='post__input'\r\n                    type='text'\r\n                    placeholder='Add a comment..'\r\n                    value={comment}\r\n                    onChange={(e)=> setComment(e.target.value)}\r\n                />\r\n                <button\r\n                    disabled={!comment}\r\n                    className=\"post__button\"\r\n                    type='submit'\r\n                    onClick={postComment}\r\n                >Post</button>\r\n                </form>\r\n                : null\r\n\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\firebase.js",[],"C:\\Users\\karan\\Desktop\\Projects\\React\\instagram-clone\\src\\ImageUpload.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":52,"column":13,"nodeType":"36","endLine":56,"endColumn":15},{"ruleId":"30","replacedBy":"37"},{"ruleId":"32","replacedBy":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["39"],["40"],"no-global-assign","no-unsafe-negation"]